{"ast":null,"code":"var _jsxFileName = \"/Users/servetcelik/Desktop/bas_chat_bot/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport userBusiness from \"./services/userBusiness\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isSubmitted, setIsSubmitted] = useState(false); // const [name, setName] = useState(\"\");\n  // const [lastName, setLastName] = useState(\"\");\n  // const [companyName, setCompanyName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n\n  const [data, setData] = useState({\n    name: \"\",\n    lastName: \"\",\n    companyName: \"\",\n    email: \"\",\n    password: \"\"\n  }); // const [num,setNum] = useState(1);\n  //\n  // useEffect(() => {\n  //     const submit = async () => {\n  //         const {data} = await userBusiness.save(data);\n  //     }\n  //\n  // }, [num]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http:localhost:8080/user/save\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(() => {\n      console.log(\"tamam\");\n    }); //const register = () => userBusiness.save(data);\n\n    console.log(data.companyName);\n  }; // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.name,\n          onChange: e => setData(prevState => ({ ...prevState,\n            name: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.lastName,\n          onChange: e => setData(prevState => ({ ...prevState,\n            lastName: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.companyName,\n          onChange: e => setData(prevState => ({ ...prevState,\n            companyName: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.email,\n          onChange: e => setData(prevState => ({ ...prevState,\n            email: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.password,\n          onChange: e => setData(prevState => ({ ...prevState,\n            password: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"HX+FHp67WginI683p/DgAZwCbN8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","userBusiness","ReactDOM","App","isSubmitted","setIsSubmitted","data","setData","name","lastName","companyName","email","password","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","console","log","renderForm","prevState","target","value"],"sources":["/Users/servetcelik/Desktop/bas_chat_bot/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport userBusiness from \"./services/userBusiness\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction App() {\n\n       const [isSubmitted, setIsSubmitted] = useState(false);\n    // const [name, setName] = useState(\"\");\n    // const [lastName, setLastName] = useState(\"\");\n    // const [companyName, setCompanyName] = useState(\"\");\n    // const [email, setEmail] = useState(\"\");\n    // const [password, setPassword] = useState(\"\");\n    const [data, setData] = useState({\n        name:\"\",\n        lastName:\"\",\n        companyName:\"\",\n        email:\"\",\n        password:\"\"\n    });\n    // const [num,setNum] = useState(1);\n    //\n    // useEffect(() => {\n    //     const submit = async () => {\n    //         const {data} = await userBusiness.save(data);\n    //     }\n    //\n    // }, [num]);\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n        fetch(\"http:localhost:8080/user/save\",{\n            method:\"POST\",\n            headers: {\"Content-type\": \"application/json\"},\n            body:JSON.stringify(data)\n        }).then(()=>{console.log(\"tamam\")})\n\n        //const register = () => userBusiness.save(data);\n\n\n        console.log(data.companyName);\n\n\n    };\n\n\n    // JSX code for login form\n    const renderForm = (\n        <div className=\"form\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                    <label>Name </label>\n                    {/*<input type=\"text\" value={data.name}  onChange={(e) => (data=>data.name).setData(e.target.value)} required />*/}\n                    <input type=\"text\" value={data.name}  onChange={(e)=>setData(prevState => ({...prevState,name: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Last Name </label>\n                    <input type=\"text\" value={data.lastName}  onChange={(e)=>setData(prevState => ({...prevState,lastName: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Company Name </label>\n                    <input type=\"text\" value={data.companyName}  onChange={(e)=>setData(prevState => ({...prevState,companyName: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Email</label>\n                    <input type=\"text\" value={data.email}  onChange={(e)=>setData(prevState => ({...prevState,email: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Password </label>\n                    <input type=\"text\" value={data.password}  onChange={(e)=>setData(prevState => ({...prevState,password: e.target.value}))} required />\n                </div>\n                <div className=\"button-container\">\n                    <input type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div className=\"app\">\n            <div className=\"login-form\">\n                <div className=\"title\">Sign Up</div>\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}