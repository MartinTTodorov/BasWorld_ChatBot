[{"/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/index.js":"1","/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/App.js":"2","/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/services/userBusiness.js":"3","/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/http-base.js":"4","/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/pages/signup.js":"5"},{"size":445,"mtime":1665491019659,"results":"6","hashOfConfig":"7"},{"size":2997,"mtime":1665483331706,"results":"8","hashOfConfig":"7"},{"size":123,"mtime":1664802937763,"results":"9","hashOfConfig":"7"},{"size":164,"mtime":1664802940991,"results":"10","hashOfConfig":"7"},{"size":2574,"mtime":1665491019657,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ro6mo7",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/index.js",[],[],"/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/App.js",[],[],"/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/services/userBusiness.js",[],[],"/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/http-base.js",[],[],"/Users/servetcelik/Desktop/Bas-World/bas_world_group_project/my-app/src/pages/signup.js",["28"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst Signup=()=> {\n\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    const [data, setData] = useState({\n        name:\"\",\n        lastName:\"\",\n        companyName:\"\",\n        email:\"\",\n        password:\"\"\n    });\n    \n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n       \n     axios.post(\"http://localhost:8080/user/save\",data).then(res=> console.log(res.data)) \n\n    };\n    //swr\n\n\n    // JSX code for login form\n    const renderForm = (\n        <div className=\"form\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                    <label>Name </label>\n                    {/*<input type=\"text\" value={data.name}  onChange={(e) => (data=>data.name).setData(e.target.value)} required />*/}\n                    <input type=\"text\" value={data.name}  onChange={(e)=>setData(prevState => ({...prevState,name: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Last Name </label>\n                    <input type=\"text\" value={data.lastName}  onChange={(e)=>setData(prevState => ({...prevState,lastName: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Company Name </label>\n                    <input type=\"text\" value={data.companyName}  onChange={(e)=>setData(prevState => ({...prevState,companyName: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Email</label>\n                    <input type=\"text\" value={data.email}  onChange={(e)=>setData(prevState => ({...prevState,email: e.target.value}))} required />\n                </div>\n                <div className=\"input-container\">\n                    <label>Password </label>\n                    <input type=\"text\" value={data.password}  onChange={(e)=>setData(prevState => ({...prevState,password: e.target.value}))} required />\n                </div>\n                <div className=\"button-container\">\n                    <input type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div className=\"app\">\n            <div className=\"login-form\">\n                <div className=\"title\">Sign Up</div>\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;",{"ruleId":"29","severity":1,"message":"30","line":7,"column":25,"nodeType":"31","messageId":"32","endLine":7,"endColumn":39},"no-unused-vars","'setIsSubmitted' is assigned a value but never used.","Identifier","unusedVar"]